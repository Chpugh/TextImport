Sub SaveAsMacroFreeWorkbook()
    Dim newFilePath As String
    
    ' Define the path and name for the new workbook (change as needed)
    newFilePath = ThisWorkbook.Path & "\MacroFreeWorkbook.xlsx"
    
    ' Save the current workbook as a macro-free workbook (.xlsx)
    ThisWorkbook.SaveCopyAs newFilePath
    
    ' Open the new workbook (macro-free)
    Workbooks.Open newFilePath
    
    ' Remove any VBA code (since .xlsx format does not support macros)
    Workbooks(Workbooks.Count).SaveAs Filename:=newFilePath, FileFormat:=xlOpenXMLWorkbook
    
    ' Optionally close the original macro-enabled workbook without saving
    ThisWorkbook.Close SaveChanges:=False
End Sub



try 2 
sample code with sub pre
Sub YourExistingCode()
    ' Your current code here
    ' (e.g., importing values, calculations, etc.)

    ' Example: Summing values, subtracting variables, or any other logic you have implemented
    Dim vb As Double, vc As Double, vd As Double, ve As Double
    vb = 10 ' Your value
    vc = 20 ' Your value
    vd = 30 ' Your value
    ve = 40 ' Your value
    
    ' Your logic for summing and subtracting values from columns B to E
    For col = 2 To 5
        Select Case col
            Case 2
                Cells(10, col).Formula = "=SUM(" & Cells(7, col).Address & ":" & Cells(8, col).Address & ") - " & vb
            Case 3
                Cells(10, col).Formula = "=SUM(" & Cells(7, col).Address & ":" & Cells(8, col).Address & ") - " & vc
            Case 4
                Cells(10, col).Formula = "=SUM(" & Cells(7, col).Address & ":" & Cells(8, col).Address & ") - " & vd
            Case 5
                Cells(10, col).Formula = "=SUM(" & Cells(7, col).Address & ":" & Cells(8, col).Address & ") - " & ve
        End Select
    Next col
    
    ' Now call the macro to save the workbook with the current date and as macro-free
    SaveAsMacroFreeWorkbookWithDate
End Sub


Sub SaveAsMacroFreeWorkbookWithDate()
    Dim newFilePath As String
    Dim currentDate As String
    
    ' Get the current date in the format yyyy-mm-dd
    currentDate = Format(Now, "yyyy-mm-dd")
    
    ' Define the path and name for the new workbook with the current date
    newFilePath = ThisWorkbook.Path & "\MacroFreeWorkbook_" & currentDate & ".xlsx"
    
    ' Save the current workbook as a macro-free workbook (.xlsx)
    ThisWorkbook.SaveCopyAs newFilePath
    
    ' Open the new workbook (macro-free)
    Workbooks.Open newFilePath
    
    ' Save the workbook again as macro-free to ensure no VBA code
    Workbooks(Workbooks.Count).SaveAs Filename:=newFilePath, FileFormat:=xlOpenXMLWorkbook
    
    ' Optionally close the original macro-enabled workbook without saving
    ThisWorkbook.Close SaveChanges:=False
End Sub


try 3

Sub SaveAsMacroFreeAndCloseOriginal()
    Dim newFilePath As String
    Dim currentWorkbook As Workbook
    
    ' Define the new file path for the macro-free .xlsx file
    newFilePath = "C:\Users\YourFolder\NewFileName.xlsx"  ' Modify as needed

    ' Reference the current workbook
    Set currentWorkbook = ThisWorkbook
    
    ' Save the current workbook as a macro-free copy
    currentWorkbook.SaveAs newFilePath, FileFormat:=xlOpenXMLWorkbook
    
    ' Close the original macro-enabled workbook without saving
    currentWorkbook.Close SaveChanges:=False
End Sub



